

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://cubeapm.github.io/</id>
  <title>CubeAPM</title>
  <subtitle>A minimal, easy to setup and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2023-04-04T15:45:58+05:30</updated>
  <author>
    <name>CubeAPM</name>
    <uri>https://cubeapm.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://cubeapm.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://cubeapm.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 CubeAPM </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>OpenTelemetry Python | Tutorial with a sample Python app instrumentation</title>
    <link href="https://cubeapm.github.io/posts/python-tutorial/" rel="alternate" type="text/html" title="OpenTelemetry Python | Tutorial with a sample Python app instrumentation" />
    <published>2023-04-01T00:00:00+05:30</published>
  
    <updated>2023-04-04T15:45:55+05:30</updated>
  
    <id>https://cubeapm.github.io/posts/python-tutorial/</id>
    <content src="https://cubeapm.github.io/posts/python-tutorial/" />
    <author>
      <name>CubeAPM</name>
    </author>

  
    
    <category term="Auto-instrumentation" />
    
    <category term="Python" />
    
  

  
    <summary>
      





      OpenTelemetry is a vendor-agnostic instrumentation library under CNCF. It can be used to instrument your Python applications to generate telemetry data. Let’s learn how it works and see how to visualize that data with CubeApm.

What is OpenTelemetry?​

OpenTelemetry emerged as a single project after the merging of OpenCensus(from Google) and OpenTracing(from Uber) into a single project. The pro...
    </summary>
  

  </entry>

  
  <entry>
    <title>OpenTelemetry Nodejs | Tutorial with a sample Nodejs app instrumentation</title>
    <link href="https://cubeapm.github.io/posts/node-tutorial/" rel="alternate" type="text/html" title="OpenTelemetry Nodejs | Tutorial with a sample Nodejs app instrumentation" />
    <published>2023-04-01T00:00:00+05:30</published>
  
    <updated>2023-04-04T15:45:55+05:30</updated>
  
    <id>https://cubeapm.github.io/posts/node-tutorial/</id>
    <content src="https://cubeapm.github.io/posts/node-tutorial/" />
    <author>
      <name>CubeAPM</name>
    </author>

  
    
    <category term="Auto-instrumentation" />
    
    <category term="Nodejs" />
    
  

  
    <summary>
      





      OpenTelemetry can auto-instrument many common modules for a Javascript application. The telemetry data captured can then be sent to CubeApm for analysis and visualization.

Creating sample Nodejs application​

You need to ensure that you have Node.js version 12 or newer. You can download the latest version of Node.js here. For the sample application, let’s create a basic ‘hello world’ express.j...
    </summary>
  

  </entry>

  
  <entry>
    <title>OpenTelemetry Java | Tutorial with a sample Java app instrumentation</title>
    <link href="https://cubeapm.github.io/posts/java-tutorial/" rel="alternate" type="text/html" title="OpenTelemetry Java | Tutorial with a sample Java app instrumentation" />
    <published>2023-04-01T00:00:00+05:30</published>
  
    <updated>2023-04-04T15:45:55+05:30</updated>
  
    <id>https://cubeapm.github.io/posts/java-tutorial/</id>
    <content src="https://cubeapm.github.io/posts/java-tutorial/" />
    <author>
      <name>CubeAPM</name>
    </author>

  
    
    <category term="Auto-instrumentation" />
    
    <category term="Java" />
    
  

  
    <summary>
      





      OpenTelemetry is a vendor-agnostic instrumentation library. In this article, let’s explore how to auto-instrument a Tomcat Java application using OpenTelemetry Java JAR agent.

After capturing telemetry data with OpenTelemetry, we will use CubeApm, an full-stack observability tool, to visualize the data.

Steps to get started with OpenTelemetry for Tomcat Java application:


  Installing CubeAp...
    </summary>
  

  </entry>

  
  <entry>
    <title>OpenTelemetry Golang | Tutorial with a sample Go app instrumentation</title>
    <link href="https://cubeapm.github.io/posts/go-tutorial/" rel="alternate" type="text/html" title="OpenTelemetry Golang | Tutorial with a sample Go app instrumentation" />
    <published>2023-04-01T00:00:00+05:30</published>
  
    <updated>2023-04-04T15:45:55+05:30</updated>
  
    <id>https://cubeapm.github.io/posts/go-tutorial/</id>
    <content src="https://cubeapm.github.io/posts/go-tutorial/" />
    <author>
      <name>CubeAPM</name>
    </author>

  
    
    <category term="Auto-instrumentation" />
    
    <category term="Go" />
    
  

  
    <summary>
      





      OpenTelemetry can be used to generate telemetry data from your Go applications. The collected data can then be sent to an observability tool for storage and visualization. OpenTelemetry is an open-source project under the Cloud Native Computing Foundation (CNCF) that aims to standardize the generation and collection of telemetry data.

In this tutorial, we will use OpenTelemetry Go libraries to...
    </summary>
  

  </entry>

</feed>


