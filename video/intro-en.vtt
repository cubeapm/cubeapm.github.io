WEBVTT

NOTE
This file was generated by Descript <www.descript.com>

00:00:00.000 --> 00:00:03.040
CubeAPM is an Application
Performance Monitoring tool.

00:00:03.197 --> 00:00:05.737
In simple words, it is
like Fitbit for software.

00:00:05.893 --> 00:00:09.843
It monitors vital parameters of APIs
and helps software development teams

00:00:09.843 --> 00:00:11.933
ensure their software is performing well.

00:00:12.062 --> 00:00:14.432
Let's take a quick tour of
some of its key features.

00:00:15.583 --> 00:00:17.483
This is the homepage of CubeAPM.

00:00:17.591 --> 00:00:20.841
Here we get a bird's eye view of
the health of all our microservices.

00:00:21.601 --> 00:00:25.111
Each row corresponds to a microservice,
and the color band indicates

00:00:25.111 --> 00:00:28.131
the health of that microservice
over the selected time interval.

00:00:28.837 --> 00:00:32.497
Green indicates normal health, orange
indicates slight degradation, and red

00:00:32.497 --> 00:00:34.367
indicates significant degradation.

00:00:35.046 --> 00:00:39.106
CubeAPM calculates the thresholds for
green, orange, and red automatically

00:00:39.106 --> 00:00:40.876
so we don't have to set them manually.

00:00:41.587 --> 00:00:45.607
Each row can also be expanded to show
the API endpoints causing poor health.

00:00:46.327 --> 00:00:48.937
Both the service name and the
endpoint name can be clicked to see

00:00:48.937 --> 00:00:50.587
more details about that resource.

00:00:51.345 --> 00:00:54.685
We can also switch to the detail view
to see the key system performance

00:00:54.685 --> 00:00:56.325
metrics in a tabular format.

00:00:57.577 --> 00:00:58.907
Let's dig into this service.

00:01:00.220 --> 00:01:03.680
Here we get high-level details of
how this microservice is performing.

00:01:04.382 --> 00:01:06.912
This is Requests per Minute
that this service is getting.

00:01:07.064 --> 00:01:10.624
This is the 90th percentile latency
of the service, this is the average

00:01:10.624 --> 00:01:12.644
latency, and this is the error rate.

00:01:13.261 --> 00:01:16.901
Here we have a drilldown of service
latency across its dependencies, for

00:01:16.901 --> 00:01:19.511
example, databases and external services.

00:01:20.634 --> 00:01:21.874
Next is RED metrics.

00:01:22.786 --> 00:01:27.246
RED is an acronym for Request Rate, Error
Rate, and Duration, that is, Latency.

00:01:27.344 --> 00:01:31.514
Accordingly, here we can see these metrics
for all the API endpoints of this service.

00:01:32.254 --> 00:01:35.514
If we want to dig deeper into any
particular endpoint, we can click

00:01:35.514 --> 00:01:37.234
on the corresponding icon here.

00:01:37.895 --> 00:01:39.115
Let's check out this one.

00:01:40.008 --> 00:01:42.958
Here we get a lot of information
about this API endpoint.

00:01:43.325 --> 00:01:45.195
We have the key metrics we saw earlier.

00:01:45.719 --> 00:01:47.029
We also have the drilldown.

00:01:47.757 --> 00:01:51.147
This table shows us how many times
each dependency is called to serve

00:01:51.147 --> 00:01:53.057
one request to our API endpoint.

00:01:53.232 --> 00:01:57.802
A high number here suggests opportunities
for optimization, for example, caching.

00:01:58.950 --> 00:02:01.890
And down here CubeAPM has
picked up some "slow" samples.

00:02:02.618 --> 00:02:05.928
We can get a sense of what's going
on inside by clicking any request,

00:02:06.008 --> 00:02:08.018
and get even more details if we want.

00:02:09.271 --> 00:02:12.131
Here we have a full trace
of this particular API call.

00:02:12.468 --> 00:02:14.448
We can see how much time was spent where.

00:02:14.761 --> 00:02:17.691
The waterfall gives an idea of
relative start and end times.

00:02:18.231 --> 00:02:22.291
We can also see details like the query
executed in this database operation.

00:02:24.396 --> 00:02:28.276
If an API call involves multiple
microservices, this page will show the

00:02:28.276 --> 00:02:30.516
details across all those microservices.

00:02:31.271 --> 00:02:34.981
So, we have seen how we can start from
a bird's eye view of all microservices

00:02:34.981 --> 00:02:37.221
to granular details of a single request.

00:02:37.366 --> 00:02:40.276
All these dashboards are
pre-built into CubeAPM, so you

00:02:40.276 --> 00:02:41.916
get great value out of the box.

00:02:42.022 --> 00:02:45.742
CubeAPM also integrates with the
OpenTelemetry standard so it's very

00:02:45.742 --> 00:02:49.232
easy to switch to or out of CubeAPM
with no changes in your code.

00:02:49.394 --> 00:02:52.174
Lastly, CubeAPM runs on
your infrastructure, so

00:02:52.174 --> 00:02:53.564
your data remains with you.

00:02:53.707 --> 00:02:56.687
And it also lowers the total
cost to upto a fifth compared

00:02:56.687 --> 00:02:58.517
to other commercial APM tools.

00:02:58.659 --> 00:03:00.779
Yes, that's upto 80% savings!

00:03:00.911 --> 00:03:03.231
CubeAPM offers many more great features.

00:03:03.361 --> 00:03:07.111
For example, you can push your
own metrics to CubeAPM and build

00:03:07.111 --> 00:03:08.641
powerful dashboards with them.

00:03:08.755 --> 00:03:11.305
You can also set alerts and
have them delivered to popular

00:03:11.305 --> 00:03:13.505
channels like email, slack, etc.

00:03:14.230 --> 00:03:15.620
Want to try it out yourself?

00:03:15.670 --> 00:03:18.010
Visit playground dot CubeAPM dot com!

